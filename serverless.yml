plugins:
  - serverless-dynamodb-local
  - serverless-offline
service: serverless-playground
frameworkVersion: '2'

package:
  individually: true
  excludeDevDependencies: false

provider:
  name: aws
  runtime: python3.8
  profile: serverless-admin
  region: us-east-1
  lambdaHashingVersion: 20201221
  environment:
    BOOK_TABLE_NAME: books
    APPLICATION_BUCKET: serverless-playground-books
    BOOK_COVER_IMAGE_FOLDER: books-cover-image
  iam:
    role:
      statements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
        Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.BOOK_TABLE_NAME}"

functions:
  create_book:
    handler: books/application/functions/create_book.execute
    events:
      - http:
          path: books
          method: post
          cors: true
  get_book_by_id:
    handler: books/application/functions/get_book_by_id.get
    events:
      - http:
          path: books/{id}
          method: get
          cors: true
  add_book_cover_image:
    handler: books/application/functions/add_cover_image_handler.execute
    events:
      - http:
          path: books/{id}/cover-image
          method: post
          cors: true
resources:
  Resources:
    BooksTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.BOOK_TABLE_NAME}

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true